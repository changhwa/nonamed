buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-milestone" }
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.0.2.RELEASE")
        classpath "org.flywaydb:flyway-gradle-plugin:3.0"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'flyway'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

group = 'io.nonamed'
version = '0.1'



repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-milestone" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web:1.0.2.RELEASE"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "com.h2database:h2"
    compile "org.projectlombok:lombok:1.12.6"
    compile "mysql:mysql-connector-java:5.1.31"
    compile "org.codehaus.jackson:jackson-mapper-asl:1.9.0"

    testCompile "junit:junit"
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }

    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}



[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
sourceSets.main.output.resourcesDir = sourceSets.main.output.classesDir
sourceSets.test.output.resourcesDir = sourceSets.test.output.classesDir

task initProject {
    project.sourceSets*.allSource.srcDirTrees.flatten().dir.each { dir ->
        dir.mkdirs()
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

flyway {
    driver = 'com.mysql.jdbc.Driver'
    url = 'jdbc:mysql://localhost:3306'
    schemas = ['nonamed']
    user = 'nonamed'
    password = '@nonamed!'
    locations = ['classpath:db/migration']
    encoding = 'UTF-8'
    outOfOrder = false
    validateOnMigrate = true
    cleanOnValidationError = false
    initOnMigrate = false
}